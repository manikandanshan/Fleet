<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="gits-n5010" name="Command line test" tests="83" failures="6" timestamp="27 Jan 2017 10:54:24 GMT" time="8.879" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <failure type="org.h2.jdbc.JdbcSQLException" message="NULL not allowed for column &amp;quot;ASSOCIATE_TYPE_ID&amp;quot;; SQL statement:
insert into FM_ASSOCIATE (ID, NUMBER, FIRST_NAME, LAST_NAME, PHONE_NO, MOBILE_NO, EMAIL, DOB, LICENCE_NO, LICENCE_VALID_UPTO, CLIENT_ID, ADDRESS, NOTES, STATUS, CREATED_ON, MODIFIED_ON) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-187]">
      <![CDATA[org.h2.jdbc.JdbcSQLException: NULL not allowed for column "ASSOCIATE_TYPE_ID"; SQL statement:
insert into FM_ASSOCIATE (ID, NUMBER, FIRST_NAME, LAST_NAME, PHONE_NO, MOBILE_NO, EMAIL, DOB, LICENCE_NO, LICENCE_VALID_UPTO, CLIENT_ID, ADDRESS, NOTES, STATUS, CREATED_ON, MODIFIED_ON) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-187]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:303)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:737)
	at org.h2.command.dml.Insert.insertRows(Insert.java:151)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:198)
	at org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:67)
	at org.dbunit.database.statement.AutomaticPreparedBatchStatement.addBatch(AutomaticPreparedBatchStatement.java:57)
	at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:187)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:67)
	at com.fleet.dao.EntityDaoImplTest.setUp(EntityDaoImplTest.java:27)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="deleteEmployee" time="0.011" classname="com.fleet.controller.AppControllerTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.deleteEmployee(AppController.java:165)
	at com.fleet.controller.AppControllerTest.deleteEmployee(AppControllerTest.java:134)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- deleteEmployee -->
  <testcase name="editEmployee" time="0.002" classname="com.fleet.controller.AppControllerTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.editEmployee(AppController.java:127)
	at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- editEmployee -->
  <testcase name="listEmployees" time="0.003" classname="com.fleet.controller.AppControllerTest">
    <failure type="org.mockito.exceptions.misusing.InvalidUseOfMatchersException" message="
Invalid use of argument matchers!
0 matchers expected, 1 recorded:
-&amp;gt; at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(anyObject(), &amp;quot;raw String&amp;quot;);
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(anyObject(), eq(&amp;quot;String by matcher&amp;quot;));

For more info see javadoc for Matchers class.
">
      <![CDATA[org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
0 matchers expected, 1 recorded:
-> at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(anyObject(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(anyObject(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.fleet.controller.AppControllerTest.listEmployees(AppControllerTest.java:58)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- listEmployees -->
  <testcase name="newEmployee" time="0.045" classname="com.fleet.controller.AppControllerTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.getPrincipal(AppController.java:252)
	at com.fleet.controller.AppController.newEmployee(AppController.java:87)
	at com.fleet.controller.AppControllerTest.newEmployee(AppControllerTest.java:66)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- newEmployee -->
  <testcase name="saveEmployeeWithSuccess" time="0.004" classname="com.fleet.controller.AppControllerTest">
    <failure type="java.lang.AssertionError" message="expected [Employee Axel registered successfully] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [Employee Axel registered successfully] but found [null]
	at com.fleet.controller.AppControllerTest.saveEmployeeWithSuccess(AppControllerTest.java:94)
... Removed 38 stack frames]]>
    </failure>
  </testcase> <!-- saveEmployeeWithSuccess -->
  <testcase name="saveEmployeeWithValidationError" time="0.001" classname="com.fleet.controller.AppControllerTest"/>
  <testcase name="saveEmployeeWithValidationErrorNonUniqueSSN" time="0.001" classname="com.fleet.controller.AppControllerTest"/>
  <testcase name="updateEmployeeWithSuccess" time="0.001" classname="com.fleet.controller.AppControllerTest">
    <failure type="java.lang.AssertionError" message="expected [Employee Axel updated successfully] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [Employee Axel updated successfully] but found [null]
	at com.fleet.controller.AppControllerTest.updateEmployeeWithSuccess(AppControllerTest.java:127)
... Removed 38 stack frames]]>
    </failure>
  </testcase> <!-- updateEmployeeWithSuccess -->
  <testcase name="updateEmployeeWithValidationError" time="0.001" classname="com.fleet.controller.AppControllerTest"/>
  <testcase name="updateEmployeeWithValidationErrorNonUniqueSSN" time="0.0" classname="com.fleet.controller.AppControllerTest"/>
  <testcase name="delete" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.AssociateDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.001" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.ClientDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="deleteEmployeeByInvalidSsn" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteEmployeeByInvalidSsn -->
  <testcase name="deleteEmployeeBySsn" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteEmployeeBySsn -->
  <testcase name="findAllEmployees" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findAllEmployees -->
  <testcase name="findById" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findById -->
  <testcase name="findEmployeeBySsn" time="0.0" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- findEmployeeBySsn -->
  <testcase name="saveEmployee" time="0.001" classname="com.fleet.dao.EmployeeDaoImplTest">
    <skipped/>
  </testcase> <!-- saveEmployee -->
  <testcase name="deleteEmployeeBySsn" time="0.007" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="findAllEmployees" time="0.001" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="findById" time="0.001" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="findEmployeeBySsn" time="0.001" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="isEmployeeSsnUnique" time="0.001" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="saveEmployee" time="0.0" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="updateEmployee" time="0.0" classname="com.fleet.service.EmployeeServiceImplTest"/>
  <testcase name="deleteFeature" time="0.001" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteFeature -->
  <testcase name="deleteFeatureByInvalid" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteFeatureByInvalid -->
  <testcase name="findAllFeatures" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- findAllFeatures -->
  <testcase name="findById" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- findById -->
  <testcase name="findFeatureByName" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- findFeatureByName -->
  <testcase name="saveFeature" time="0.0" classname="com.fleet.dao.FeatureDaoImplTest">
    <skipped/>
  </testcase> <!-- saveFeature -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="findAllPrivilege" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- findAllPrivilege -->
  <testcase name="findById" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- findById -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.PrivilegeDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalidCode" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalidCode -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.RoleDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.001" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.ServiceDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.001" classname="com.fleet.dao.ServiceStationDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.TripDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.TripDetailDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.001" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalidCode" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalidCode -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.UserDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.UserRoleDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
  <testcase name="delete" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- delete -->
  <testcase name="deleteByInvalid" time="0.001" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteByInvalid -->
  <testcase name="find" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- find -->
  <testcase name="findAll" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- findAll -->
  <testcase name="save" time="0.0" classname="com.fleet.dao.UserTypeDaoImplTest">
    <skipped/>
  </testcase> <!-- save -->
</testsuite> <!-- Command line test -->
