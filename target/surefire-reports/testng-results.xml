<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="66" failed="6" total="83" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="8879" started-at="2017-01-27T10:54:15Z" finished-at="2017-01-27T10:54:24Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="8879" started-at="2017-01-27T10:54:15Z" finished-at="2017-01-27T10:54:24Z">
      <class name="com.fleet.dao.UserTypeDaoImplTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserTypeDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="deleteByInvalid" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserTypeDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserTypeDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="find" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserTypeDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="save" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserTypeDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.UserTypeDaoImplTest@55881a8f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.UserTypeDaoImplTest -->
      <class name="com.fleet.service.EmployeeServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="setUp" is-config="true" duration-ms="8" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteEmployeeBySsn()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="deleteEmployeeBySsn" duration-ms="7" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployeeBySsn -->
        <test-method status="PASS" signature="findAllEmployees()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="findAllEmployees" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllEmployees -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="findById" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="findEmployeeBySsn()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="findEmployeeBySsn" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findEmployeeBySsn -->
        <test-method status="PASS" signature="isEmployeeSsnUnique()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="isEmployeeSsnUnique" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmployeeSsnUnique -->
        <test-method status="PASS" signature="saveEmployee()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="saveEmployee" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveEmployee -->
        <test-method status="PASS" signature="updateEmployee()[pri:0, instance:com.fleet.service.EmployeeServiceImplTest@7c8b3e08]" name="updateEmployee" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
      </class> <!-- com.fleet.service.EmployeeServiceImplTest -->
      <class name="com.fleet.dao.EmployeeDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.deleteEmployeeByInvalidSsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="deleteEmployeeByInvalidSsn()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="deleteEmployeeByInvalidSsn" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployeeByInvalidSsn -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteEmployeeBySsn()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="deleteEmployeeBySsn" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployeeBySsn -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.deleteEmployeeBySsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findAllEmployees()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="findAllEmployees" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllEmployees -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.findAllEmployees()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findById()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="findById" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.findEmployeeBySsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findEmployeeBySsn()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="findEmployeeBySsn" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findEmployeeBySsn -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="saveEmployee()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="saveEmployee" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveEmployee -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.EmployeeDaoImplTest.saveEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.EmployeeDaoImplTest@9ef90e0]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.EmployeeDaoImplTest -->
      <class name="com.fleet.dao.TripDaoImplTest">
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.TripDaoImplTest@c62d2ab]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.TripDaoImplTest -->
      <class name="com.fleet.dao.ClientDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ClientDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="deleteByInvalid" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ClientDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ClientDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ClientDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ClientDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.ClientDaoImplTest@13e3cf1f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.ClientDaoImplTest -->
      <class name="com.fleet.dao.ServiceStationDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceStationDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceStationDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceStationDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceStationDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="save" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceStationDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.ServiceStationDaoImplTest@6f73cf45]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.ServiceStationDaoImplTest -->
      <class name="com.fleet.dao.TripDetailDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDetailDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDetailDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDetailDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDetailDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.TripDetailDaoImplTest@2102ff12]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.TripDetailDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.fleet.dao.TripDetailDaoImplTest -->
      <class name="com.fleet.controller.AppControllerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="setUp" is-config="true" duration-ms="683" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="deleteEmployee()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="deleteEmployee" duration-ms="11" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.deleteEmployee(AppController.java:165)
	at com.fleet.controller.AppControllerTest.deleteEmployee(AppControllerTest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method status="FAIL" signature="editEmployee()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="editEmployee" duration-ms="2" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.editEmployee(AppController.java:127)
	at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editEmployee -->
        <test-method status="FAIL" signature="listEmployees()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="listEmployees" duration-ms="3" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="org.mockito.exceptions.misusing.InvalidUseOfMatchersException">
            <message>
              <![CDATA[
Invalid use of argument matchers!
0 matchers expected, 1 recorded:
-> at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(anyObject(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(anyObject(), eq("String by matcher"));

For more info see javadoc for Matchers class.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
0 matchers expected, 1 recorded:
-> at com.fleet.controller.AppControllerTest.editEmployee(AppControllerTest.java:101)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(anyObject(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(anyObject(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.fleet.controller.AppControllerTest.listEmployees(AppControllerTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.misusing.InvalidUseOfMatchersException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listEmployees -->
        <test-method status="FAIL" signature="newEmployee()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="newEmployee" duration-ms="45" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fleet.controller.AppController.getPrincipal(AppController.java:252)
	at com.fleet.controller.AppController.newEmployee(AppController.java:87)
	at com.fleet.controller.AppControllerTest.newEmployee(AppControllerTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newEmployee -->
        <test-method status="FAIL" signature="saveEmployeeWithSuccess()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="saveEmployeeWithSuccess" duration-ms="4" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Employee Axel registered successfully] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Employee Axel registered successfully] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:167)
	at com.fleet.controller.AppControllerTest.saveEmployeeWithSuccess(AppControllerTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveEmployeeWithSuccess -->
        <test-method status="PASS" signature="saveEmployeeWithValidationError()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="saveEmployeeWithValidationError" duration-ms="1" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveEmployeeWithValidationError -->
        <test-method status="PASS" signature="saveEmployeeWithValidationErrorNonUniqueSSN()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="saveEmployeeWithValidationErrorNonUniqueSSN" duration-ms="1" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveEmployeeWithValidationErrorNonUniqueSSN -->
        <test-method status="FAIL" signature="updateEmployeeWithSuccess()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="updateEmployeeWithSuccess" duration-ms="1" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Employee Axel updated successfully] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Employee Axel updated successfully] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:167)
	at com.fleet.controller.AppControllerTest.updateEmployeeWithSuccess(AppControllerTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployeeWithSuccess -->
        <test-method status="PASS" signature="updateEmployeeWithValidationError()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="updateEmployeeWithValidationError" duration-ms="1" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployeeWithValidationError -->
        <test-method status="PASS" signature="updateEmployeeWithValidationErrorNonUniqueSSN()[pri:0, instance:com.fleet.controller.AppControllerTest@950bde8]" name="updateEmployeeWithValidationErrorNonUniqueSSN" duration-ms="0" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployeeWithValidationErrorNonUniqueSSN -->
      </class> <!-- com.fleet.controller.AppControllerTest -->
      <class name="com.fleet.dao.AssociateDaoImplTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="26" started-at="2017-01-27T16:24:15Z" finished-at="2017-01-27T16:24:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="7467" started-at="2017-01-27T16:24:15Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="83" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="setUp()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <exception class="org.h2.jdbc.JdbcSQLException">
            <message>
              <![CDATA[NULL not allowed for column "ASSOCIATE_TYPE_ID"; SQL statement:
insert into FM_ASSOCIATE (ID, NUMBER, FIRST_NAME, LAST_NAME, PHONE_NO, MOBILE_NO, EMAIL, DOB, LICENCE_NO, LICENCE_VALID_UPTO, CLIENT_ID, ADDRESS, NOTES, STATUS, CREATED_ON, MODIFIED_ON) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-187]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.h2.jdbc.JdbcSQLException: NULL not allowed for column "ASSOCIATE_TYPE_ID"; SQL statement:
insert into FM_ASSOCIATE (ID, NUMBER, FIRST_NAME, LAST_NAME, PHONE_NO, MOBILE_NO, EMAIL, DOB, LICENCE_NO, LICENCE_VALID_UPTO, CLIENT_ID, ADDRESS, NOTES, STATUS, CREATED_ON, MODIFIED_ON) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-187]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:303)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:737)
	at org.h2.command.dml.Insert.insertRows(Insert.java:151)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:198)
	at org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:67)
	at org.dbunit.database.statement.AutomaticPreparedBatchStatement.addBatch(AutomaticPreparedBatchStatement.java:57)
	at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:187)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:67)
	at com.fleet.dao.EntityDaoImplTest.setUp(EntityDaoImplTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:601)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.h2.jdbc.JdbcSQLException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.AssociateDaoImplTest@711fcaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.AssociateDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.fleet.dao.AssociateDaoImplTest -->
      <class name="com.fleet.dao.ServiceDetailDaoImplTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="delete" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceDetailDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceDetailDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceDetailDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceDetailDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.ServiceDetailDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.ServiceDetailDaoImplTest@3de8b615]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.ServiceDetailDaoImplTest -->
      <class name="com.fleet.dao.UserDaoImplTest">
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="delete" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserDaoImplTest.deleteByInvalidCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteByInvalidCode()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="deleteByInvalidCode" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalidCode -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="find" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.UserDaoImplTest@1effd40a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.UserDaoImplTest -->
      <class name="com.fleet.dao.PrivilegeDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.PrivilegeDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.PrivilegeDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAllPrivilege()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="findAllPrivilege" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllPrivilege -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.PrivilegeDaoImplTest.findAllPrivilege()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.PrivilegeDaoImplTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="findById()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="findById" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.PrivilegeDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.PrivilegeDaoImplTest@367ac7c5]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.PrivilegeDaoImplTest -->
      <class name="com.fleet.dao.FeatureDaoImplTest">
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="deleteFeature()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="deleteFeature" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFeature -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.deleteFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="deleteFeatureByInvalid()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="deleteFeatureByInvalid" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFeatureByInvalid -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.deleteFeatureByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findAllFeatures()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="findAllFeatures" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllFeatures -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.findAllFeatures()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findById()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="findById" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findFeatureByName()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="findFeatureByName" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findFeatureByName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.findFeatureByName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.FeatureDaoImplTest.saveFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="saveFeature()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="saveFeature" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveFeature -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.FeatureDaoImplTest@4b6f1c33]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.FeatureDaoImplTest -->
      <class name="com.fleet.dao.RoleDaoImplTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.RoleDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteByInvalidCode()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="deleteByInvalidCode" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalidCode -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.RoleDaoImplTest.deleteByInvalidCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="find" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.RoleDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.RoleDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="save" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.RoleDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.RoleDaoImplTest@1995bf19]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:23Z" finished-at="2017-01-27T16:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.RoleDaoImplTest -->
      <class name="com.fleet.dao.UserRoleDaoImplTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="delete()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="delete" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserRoleDaoImplTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="deleteByInvalid()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="deleteByInvalid" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteByInvalid -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserRoleDaoImplTest.deleteByInvalid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="find()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="find" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- find -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserRoleDaoImplTest.find()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAll()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="findAll" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserRoleDaoImplTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="save()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="save" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fleet.dao.UserRoleDaoImplTest.save()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fleet.dao.UserRoleDaoImplTest@6ceac619]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-27T16:24:24Z" finished-at="2017-01-27T16:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fleet.dao.UserRoleDaoImplTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
